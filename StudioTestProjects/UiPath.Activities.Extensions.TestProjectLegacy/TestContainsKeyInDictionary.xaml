<Activity mc:Ignorable="sap sap2010" x:Class="TestCase" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="868,1438" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:uea="clr-namespace:UiPathTeam.Extensions.Activities;assembly=UiPathTeam.Extensions.Activities" xmlns:uta="clr-namespace:UiPath.Testing.Activities;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPathTeam.Extensions.Activities.Design</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Testing</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPathTeam.Extensions.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPathTeam.Extensions.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPathTeam.Extensions.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="576,1373" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:Object, x:Object)" Name="dictionary" />
      <Variable x:TypeArguments="x:String" Name="stringKey">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">Key 1</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="stringValue">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">Value 1</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Int32" Name="integerKey">
        <Variable.Default>
          <Literal x:TypeArguments="x:Int32" Value="1" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Int32" Name="integerValue">
        <Variable.Default>
          <Literal x:TypeArguments="x:Int32" Value="32" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="stringKey2">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">Key 3</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Int32" Default="42" Name="integerValue2" />
      <Variable x:TypeArguments="x:String" Name="missingKey">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">Nobody home</Literal>
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="... Given" sap:VirtualizedContainerService.HintSize="534,193" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:Object, x:Object)">
            <mca:CSharpReference x:TypeArguments="scg:Dictionary(x:Object, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">dictionary</mca:CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:Object, x:Object)">
            <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Object, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">new Dictionary&lt;object, object&gt;{{stringKey, stringValue},{integerKey,integerValue},{stringKey2,integerValue2}}</mca:CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <uea:VerifyKeyInDictionary ContinueOnError="{x:Null}" Out_result="{x:Null}" Out_value="{x:Null}" sap:VirtualizedContainerService.HintSize="534,133" sap2010:WorkflowViewState.IdRef="VerifyKeyInDictionary_1">
      <uea:VerifyKeyInDictionary.In_dictionary>
        <InArgument x:TypeArguments="scg:Dictionary(x:Object, x:Object)">
          <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Object, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">dictionary</mca:CSharpValue>
        </InArgument>
      </uea:VerifyKeyInDictionary.In_dictionary>
      <uea:VerifyKeyInDictionary.In_key>
        <InArgument x:TypeArguments="x:Object">
          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">stringKey</mca:CSharpValue>
        </InArgument>
      </uea:VerifyKeyInDictionary.In_key>
    </uea:VerifyKeyInDictionary>
    <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="534,60" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_1" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
      <uta:VerifyExpressionWithOperator.FirstExpression>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">stringValue</mca:CSharpValue>
        </InArgument>
      </uta:VerifyExpressionWithOperator.FirstExpression>
      <uta:VerifyExpressionWithOperator.SecondExpression>
        <InArgument x:TypeArguments="x:Object">
          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">dictionary[stringKey]</mca:CSharpValue>
        </InArgument>
      </uta:VerifyExpressionWithOperator.SecondExpression>
    </uta:VerifyExpressionWithOperator>
    <uea:VerifyKeyInDictionary ContinueOnError="{x:Null}" Out_result="{x:Null}" Out_value="{x:Null}" sap:VirtualizedContainerService.HintSize="534,133" sap2010:WorkflowViewState.IdRef="VerifyKeyInDictionary_2">
      <uea:VerifyKeyInDictionary.In_dictionary>
        <InArgument x:TypeArguments="scg:Dictionary(x:Object, x:Object)">
          <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Object, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">dictionary</mca:CSharpValue>
        </InArgument>
      </uea:VerifyKeyInDictionary.In_dictionary>
      <uea:VerifyKeyInDictionary.In_key>
        <InArgument x:TypeArguments="x:Object">
          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">integerKey</mca:CSharpValue>
        </InArgument>
      </uea:VerifyKeyInDictionary.In_key>
    </uea:VerifyKeyInDictionary>
    <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="534,60" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_3" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
      <uta:VerifyExpressionWithOperator.FirstExpression>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">integerValue</mca:CSharpValue>
        </InArgument>
      </uta:VerifyExpressionWithOperator.FirstExpression>
      <uta:VerifyExpressionWithOperator.SecondExpression>
        <InArgument x:TypeArguments="x:Object">
          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">dictionary[integerKey]</mca:CSharpValue>
        </InArgument>
      </uta:VerifyExpressionWithOperator.SecondExpression>
    </uta:VerifyExpressionWithOperator>
    <uea:VerifyKeyInDictionary ContinueOnError="{x:Null}" Out_result="{x:Null}" Out_value="{x:Null}" sap:VirtualizedContainerService.HintSize="534,133" sap2010:WorkflowViewState.IdRef="VerifyKeyInDictionary_3">
      <uea:VerifyKeyInDictionary.In_dictionary>
        <InArgument x:TypeArguments="scg:Dictionary(x:Object, x:Object)">
          <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Object, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">dictionary</mca:CSharpValue>
        </InArgument>
      </uea:VerifyKeyInDictionary.In_dictionary>
      <uea:VerifyKeyInDictionary.In_key>
        <InArgument x:TypeArguments="x:Object">
          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">stringKey</mca:CSharpValue>
        </InArgument>
      </uea:VerifyKeyInDictionary.In_key>
    </uea:VerifyKeyInDictionary>
    <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="534,60" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_5" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
      <uta:VerifyExpressionWithOperator.FirstExpression>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">integerValue2</mca:CSharpValue>
        </InArgument>
      </uta:VerifyExpressionWithOperator.FirstExpression>
      <uta:VerifyExpressionWithOperator.SecondExpression>
        <InArgument x:TypeArguments="x:Object">
          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">dictionary[stringKey2]</mca:CSharpValue>
        </InArgument>
      </uta:VerifyExpressionWithOperator.SecondExpression>
    </uta:VerifyExpressionWithOperator>
    <uea:VerifyKeyInDictionary ContinueOnError="{x:Null}" Out_result="{x:Null}" Out_value="{x:Null}" sap:VirtualizedContainerService.HintSize="534,133" sap2010:WorkflowViewState.IdRef="VerifyKeyInDictionary_4">
      <uea:VerifyKeyInDictionary.In_dictionary>
        <InArgument x:TypeArguments="scg:Dictionary(x:Object, x:Object)">
          <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:Object, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">dictionary</mca:CSharpValue>
        </InArgument>
      </uea:VerifyKeyInDictionary.In_dictionary>
      <uea:VerifyKeyInDictionary.In_key>
        <InArgument x:TypeArguments="x:Object">
          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">missingKey</mca:CSharpValue>
        </InArgument>
      </uea:VerifyKeyInDictionary.In_key>
    </uea:VerifyKeyInDictionary>
    <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="534,60" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_7" Operator="Inequality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
      <uta:VerifyExpressionWithOperator.FirstExpression>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">missingKey</mca:CSharpValue>
        </InArgument>
      </uta:VerifyExpressionWithOperator.FirstExpression>
      <uta:VerifyExpressionWithOperator.SecondExpression>
        <InArgument x:TypeArguments="x:Object">
          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">dictionary[stringKey2]</mca:CSharpValue>
        </InArgument>
      </uta:VerifyExpressionWithOperator.SecondExpression>
    </uta:VerifyExpressionWithOperator>
  </Sequence>
</Activity>